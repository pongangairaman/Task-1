JQUERY 

jQuery is a JavaScript library designed to simplify HTML DOM tree traversal and manipulation, as well as event handling, CSS animation, and Ajax. It is free, open-source software using the permissive MIT License. As of May 2019, jQuery is used by 73% of the 10 million most popular websites. Web analysis indicates that it is the most widely deployed JavaScript library by a large margin, having at least 3 to 4 times more usage than any other JavaScript library jQuery's syntax is designed to make it easier to navigate a document, select DOM elements, create animations, handle events, and develop Ajax applications. jQuery also provides capabilities for developers to create plug-ins on top of the JavaScript library. This enables developers to create abstractions for low-level interaction and animation, advanced effects and high-level, themeable widgets. The modular approach to the jQuery library allows the creation of powerful dynamic web pages and Web applications.
The set of jQuery core features-DOM element selections, traversal, and manipulation-enabled by its selector engine (named "Sizzle" from v1.3), created a new "programming style", fusing algorithms and DOM data structures. This style influenced the architecture of other JavaScript frameworks like YUI v3 and Dojo, later stimulating the creation of the standard Selectors API. Later, this style has been enhanced with a deeper algorithm-data fusion in an heir of jQuery, the D3.js framework.
Microsoft and Nokia bundle jQuery on their platforms. Microsoft includes it with Visual Studio for use within Microsoft's ASP.NET AJAX and ASP.NET MVC frameworks while Nokia has integrated it into the Web Run-Time widget development platform.

OVERVIEW 

jQuery, at its core, is a Document Object Model (DOM) manipulation library. The DOM is a tree-structure representation of all the elements of a Web page. jQuery simplifies the syntax for finding, selecting, and manipulating these DOM elements. For example, jQuery can be used for finding an element in the document with a certain property (e.g. all elements with an h1 tag), changing one or more of its attributes (e.g. color, visibility), or making it respond to an event (e.g. a mouse click).
jQuery also provides a paradigm for event handling that goes beyond basic DOM element selection and manipulation. The event assignment and the event callback function definition are done in a single step in a single location in the code. jQuery also aims to incorporate other highly used JavaScript functionality (e.g. fade ins and fade outs when hiding elements, animations by manipulating CSS properties).
The principles of developing with jQuery are:
Separation of JavaScript and HTML: The jQuery library provides simple syntax for adding event handlers to the DOM using JavaScript, rather than adding HTML event attributes to call JavaScript functions. Thus, it encourages developers to completely separate JavaScript code from HTML markup.

Brevity and clarity: jQuery promotes brevity and clarity with features like "chainable" functions and shorthand function names.
Elimination of cross-browser incompatibilities: The JavaScript engines of different browsers differ slightly so JavaScript code that works for one browser may not work for another. Like other JavaScript toolkits, jQuery handles all these cross-browser inconsistencies and provides a consistent interface that works across different browsers.
Extensibility: New events, elements, and methods can be easily added and then reused as a plugin
HISTORY

jQuery was originally created in January 2006 at BarCamp NYC by John Resig, influenced by Dean Edwards' earlier cssQuery library. It is currently maintained by a team of developers led by Timmy Willison (with the jQuery selector engine, Sizzle, being led by Richard Gibson).
jQuery was originally licensed under the CC BY-SA 2.5, and relicensed to the MIT license in 2006. At the end of 2006, it was dual-licensed under GPL and MIT licenses. As this led to some confusion, in 2012 the GPL was dropped and is now only licensed under the MIT license

POPULARITY

In 2015, jQuery was used on 62.7% of the top 1 million websites (according to BuiltWith), and
17% of all Internet websites.
In 2017, jQuery was used on 69.2% of the top 1 million websites (according to Libscore).
In 2018, jQuery was used on 78% of the top 1 million websites.
In 2019, jQuery was used on 80% of the top 1 million websites (according to BuiltWith), and
74.1% of the top 10 million (per W3Techs).
As of Apr 2021, jQuery is used by 77.8% of the top 10 million websites (according to W3Techs).

Features jQuery includes the following features:
DOM element selections using the multi-browser opensource selector engine Sizzle, a spin-off of the jQuery project
DOM manipulation based on CSS selectors that uses elements' names and attributes, such as id and class, as criteria to select nodes in the DOM
Events
Effects and animations
Ajax
Deferred and Promise objects to control asynchronous processing
JSON parsing
Extensibility through plug-ins
Utilities, such as feature detection
Compatibility methods that are natively available in modern browsers, but need fallbacks for older browsers, such as jQuery.inArray() and jQuery.each(). Cross-browser support

Plug-ins jQuery's architecture allows developers to create plug-in code to extend its function. There are thousands of jQuery plug-ins available on the Web that cover a range of functions, such as Ajax helpers, Web services, datagrids, dynamic lists, XML and XSLT tools, drag and drop, events, cookie handling, and modal windows.
An important source of jQuery plug-ins is the plugins sub-domain of the jQuery Project website. The plugins in this subdomain, however, were accidentally deleted in December 2011 in an attempt to rid the site of spam. The new site is a GitHub-hosted repository, which required developers to resubmit their plugins and to conform to new submission requirements.jQuery provides a "Learning Center" that can help users understand JavaScript and get started developing jQuery plugins.
In order to create these plug-ins, developers can either choose to write their own code from scratch or build on top of an existing structure such as the jQuery Boilerplate.

TESTING FRAMEWORK

QUnit is a test automation framework used to test the jQuery project. The jQuery team developed it as an in-house unit testing library. The jQuery team uses it to test its code and plugins, but it can test any generic JavaScript code, including server-side JavaScript code.
As of 2011, the jQuery Testing Team uses QUnit with TestSwarm to test each jQuery codebase release
